{"version":3,"sources":["components/login/login.js","components/login/loginbg.svg","components/table/table.js","components/updateForm/updateForm.js","components/expense/expenseForm.js","components/management/management.js","components/categories/categories.js","components/charts/lineChart.js","components/charts/barChart.js","components/charts/doughnut.js","components/reports/reports.js","components/config/config.js","components/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Login","justify","className","name","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","href","htmlType","to","DataTable","showUpdate","confirm","cancel","transactions","handleOkUpdate","handleCancelUpdate","loading","columns","title","dataIndex","key","render","color","tag","toUpperCase","text","record","size","onConfirm","onCancel","okText","cancelText","DeleteOutlined","onClick","EditOutlined","dataSource","layout","labelCol","span","wrapperCol","UpdateForm","form","label","Option","value","initialValue","description","category","amount","ExpenseForm","Management","Form","useForm","updateForm","useState","setTransactions","useEffect","getTransactions","isModalVisible","setIsModalVisible","isUpdateVisible","setIsUpdateVisible","setRecord","isLoading","setIsLoading","a","fetch","response","json","data","console","log","handleOk","validateFields","values","request","method","headers","Accept","body","JSON","stringify","then","res","result","error","alert","e","_id","success","extra","PlusCircleOutlined","visible","onOk","Categories","datos","LineChart","config","fecha","gasto","xField","yField","point","shape","style","fill","stroke","lineWidth","BarChart","month","seriesField","legend","position","Doughnut","appendPadding","angleField","colorField","radius","innerRadius","offset","textAlign","autoRotate","content","interactions","Reports","Config","Header","Menu","SubMenu","Layout","Content","Sider","Dashboard","theme","mode","BellOutlined","width","defaultSelectedKeys","defaultOpenKeys","height","borderRight","icon","TableOutlined","TagsOutlined","BarChartOutlined","SettingOutlined","padding","margin","minHeight","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fecbce6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link\n   } from \"react-router-dom\";\nimport \"./login.css\";\nimport background from '../login/loginbg.svg';\n\nconst Login = () => {\n  return (\n    <Row justify=\"center\" className=\"loginForm\" >\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{\n          remember: true,\n        }}\n        \n      >\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: false,\n              message: \"Please input your Username!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n            placeholder=\"Username\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: false,\n              message: \"Please input your Password!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Recordarme</Checkbox>\n          </Form.Item>\n\n          <a className=\"login-form-forgot\" href=\"\">\n            Olvide mi password\n          </a>\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n           <Link to=\"/dashboard\">Login</Link>\n          </Button>\n          \n        </Form.Item>\n      </Form>\n    </Row>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/loginbg.fc90ec4d.svg\";","import \"./table.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Tag, Space, Popconfirm, message, Button } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst DataTable = ({\n  showUpdate,\n  confirm,\n  cancel,\n  handleOkUpdate,\n  handleCancelUpdate,\n  transactions,\n  loading,\n}) => {\n  const columns = [\n    {\n      title: \"Etiqueta\",\n      dataIndex: \"type\",\n      key: \"type\",\n      render: (type) => {\n        let color = type === \"i\" ? \"green\" : \"red\";\n        let tag = type === \"i\" ? \"ingreso\" : \"egreso\";\n\n        return (\n          <Tag color={color} key={tag}>\n            {tag.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Fecha\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n    },\n    {\n      title: \"Descripcion\",\n      dataIndex: \"description\",\n      key: \"description\",\n    },\n\n    {\n      title: \"Importe\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n    },\n    {\n      title: \"Categoria\",\n      key: \"category\",\n      dataIndex: \"category\",\n    },\n    {\n      title: \"Accion\",\n      key: \"action\",\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Popconfirm\n            title=\"Estas seguro?\"\n            onConfirm={() => {\n              confirm(record);\n            }}\n            onCancel={cancel}\n            okText=\"Si\"\n            cancelText=\"No\"\n          >\n            <Button type=\"link\">\n              <DeleteOutlined />\n            </Button>\n          </Popconfirm>\n          <Button type=\"link\"  onClick={() => {\n              showUpdate(record);\n            }} >\n            <EditOutlined />\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table columns={columns} dataSource={transactions} loading={loading} />\n    </div>\n  );\n};\n\nexport default DataTable;\n","import { Form, Input, InputNumber, Button, Select, DatePicker } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst UpdateForm = ({ form, record }) => {\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      form={form}\n    >\n      <Form.Item\n        label=\"Tipo\"\n        name=\"type\"\n        rules={[\n          {\n            required: true,\n            message: \"Seleccione un tipo de entrada\",\n          },\n        ]}\n      >\n        <Select >\n          <Select.Option value=\"i\">Ingreso</Select.Option>\n          <Select.Option value=\"e\">Gasto</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"Fecha\" name=\"createdAt\">\n        <DatePicker />\n      </Form.Item>\n      <Form.Item\n        label=\"Descripcion\"\n        name=\"description\"\n        rules={[\n          {\n            required: true,\n            message: \"Ingrese una descripcion\",\n          },\n        ]}\n        initialValue={record.description}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Categoria\"\n        name=\"category\"\n        rules={[\n          {\n            required: true,\n            message: \"Seleccione una categoria\",\n          },\n        ]}\n        initialValue={record.category}\n      >\n        <Select>\n          <Select.Option value=\"supermercado\">Supermercado</Select.Option>\n          <Select.Option value=\"auto\">Auto</Select.Option>\n          <Select.Option value=\"fijos\">Gastos Fijos</Select.Option>\n          <Select.Option value=\"tarjeta\">Tarjeta de credito</Select.Option>\n          <Select.Option value=\"otros\">Otros</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"Monto\"\n        name=\"amount\"\n        rules={[\n          {\n            required: true,\n            message: \"Ingrese un monto\",\n          },\n        ]}\n        initialValue={record.amount}\n      >\n        <InputNumber />\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default UpdateForm;\n","import { Form, Input, InputNumber, Button, Select, DatePicker } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst ExpenseForm = ({ form }) => {\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      form={form}\n    >\n      <Form.Item\n        label=\"Tipo\"\n        name=\"type\"\n        rules={[\n          {\n            required: true,\n            message: \"Seleccione un tipo de entrada\",\n          },\n        ]}\n      >\n        <Select>\n          <Select.Option value=\"i\">Ingreso</Select.Option>\n          <Select.Option value=\"e\">Gasto</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n      label=\"Fecha\"\n      name=\"createdAt\"\n      >\n          <DatePicker/>\n      </Form.Item>\n      <Form.Item\n        label=\"Descripcion\"\n        name=\"description\"\n        rules={[\n          {\n            required: true,\n            message: \"Ingrese una descripcion\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Categoria\"\n        name=\"category\"\n        rules={[\n          {\n            required: true,\n            message: \"Seleccione una categoria\",\n          },\n        ]}\n      >\n        <Select>\n          <Select.Option value=\"supermercado\">Supermercado</Select.Option>\n          <Select.Option value=\"auto\">Auto</Select.Option>\n          <Select.Option value=\"fijos\">Gastos Fijos</Select.Option>\n          <Select.Option value=\"tarjeta\">Tarjeta de credito</Select.Option>\n          <Select.Option value=\"otros\">Otros</Select.Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"Monto\"\n        name=\"amount\"\n        rules={[\n          {\n            required: true,\n            message: \"Ingrese un monto\",\n          },\n        ]}\n      >\n        <InputNumber />\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  PageHeader,\n  Modal,\n  Form,\n  message,\n} from \"antd\";\nimport {\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport Table from \"../table/table\";\nimport UpdateForm from \"../updateForm/updateForm\";\nimport Expenseform from \"../expense/expenseForm\";\n\nimport MenuItem from \"antd/lib/menu/MenuItem\";\n\nconst Management = () => {\n  const [form] = Form.useForm();\n  const [updateForm] = Form.useForm();\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isUpdateVisible, setIsUpdateVisible] = useState(false);\n  const [record, setRecord] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const url = \"https://piggy-srv.herokuapp.com/api/v1/transactions\";\n  const getTransactions = async () => {\n    setIsLoading(true);\n    const response = await fetch(url);\n    const data = await response.json();\n    setTransactions(data.data);\n    console.log(data);\n    setIsLoading(false);\n  };\n  //CREATE\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const handleOk = async () => {\n    const values = await form.validateFields();\n    //values.type = \"e\";\n    let request = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    };\n    console.log(values);\n    fetch(\"https://piggy-srv.herokuapp.com/api/v1/transactions\", request)\n      .then((res) => res.json())\n      .then(\n        //Todo OK\n        (result) => {\n          console.log(result);\n          getTransactions();\n        },\n        //Error\n        (error) => {\n          alert(\"Error al crear la transaccion\");\n        }\n      );\n\n    console.log(\"Success:\", values);\n    setIsModalVisible(false);\n  };\n\n  //DELETE\n  const confirm = async (e) => {\n    console.log(e);\n    let request = {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    fetch(\n      \"https://piggy-srv.herokuapp.com/api/v1/transactions/\" + e._id,\n      request\n    )\n      .then((res) => res.json())\n      .then(\n        //Todo OK\n        (result) => {\n          console.log(result);\n          getTransactions();\n        },\n        //Error\n        (error) => {\n          alert(\"Error al crear la transaccion\");\n        }\n      );\n\n    message.success(\"Se elimino el registro correctamente.\");\n    getTransactions();\n  };\n\n  const cancel = (e) => {\n    console.log(e);\n    //\n  };\n  //UPDATE\n  const showUpdate = (record) => {\n    setIsUpdateVisible(true);\n    setRecord(record);\n  };\n\n  const handleOkUpdate = async () => {\n    const values = await updateForm.validateFields();\n\n    let request = {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    };\n    console.log(values);\n    fetch(\n      `https://piggy-srv.herokuapp.com/api/v1/transactions/${record._id}`,\n      request\n    )\n      .then((res) => res.json())\n      .then(\n        //Todo OK\n        (result) => {\n          console.log(result);\n          getTransactions();\n        },\n        //Error\n        (error) => {\n          alert(\"Error al actualizar la transaccion\");\n        }\n      );\n\n    console.log(\"Success:\", values);\n    setIsModalVisible(false);\n\n    setIsUpdateVisible(false);\n  };\n\n  const handleCancelUpdate = () => {};\n  const updateRecord = async (e) => {};\n\n  const cancelUpdate = (e) => {};\n\n  return (\n    <div>\n         <PageHeader\n              title=\"Gestion de gastos\"\n              extra={[\n                <Button key=\"1\" type=\"primary\" onClick={showModal}>\n                  <PlusCircleOutlined />\n                  Nuevo gasto\n                </Button>,\n              ]}\n            ></PageHeader>\n      <Table\n        confirm={confirm}\n        cancel={cancel}\n        transactions={transactions}\n        loading={isLoading}\n        handleOkUpdate={handleOkUpdate}\n        handleCancelUpdate={handleCancelUpdate}\n        showUpdate={showUpdate}\n      />\n      <Modal\n        title=\"Ingrese un registro\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Expenseform form={form} />\n      </Modal>\n      <Modal\n        title=\"Edicion de registro\"\n        visible={isUpdateVisible}\n        onOk={handleOkUpdate}\n        onCancel={handleCancelUpdate}\n      >\n        <UpdateForm form={updateForm} record={record} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Management;\n","\nimport React from \"react\";\nimport { Table, Tag, Space } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\n\nconst Categories = (datos) => {\n\n  const dataSource = [\n    {\n      type: 'i',\n      description: 'Sueldo',\n      \n    },\n    {\n      type: 'i',\n      description: 'Aguinaldo',\n      \n    },\n    {\n      type: 'i',\n      description: 'Bono',\n      \n    },\n    {\n      type: 'i',\n      description: 'Extra',\n      \n    },\n    {\n      type: 'e',\n      description: 'Supermercado',\n      \n    },\n    ,\n    {\n      type: 'e',\n      description: 'Gastos fijos',\n      \n    },\n    ,\n    {\n      type: 'e',\n      description: 'Alquiler',\n      \n    },\n    ,\n    {\n      type: 'e',\n      description: 'Auto',\n      \n    },\n    ,\n    {\n      type: 'e',\n      description: 'Tarjeta de credito',\n      \n    },\n    ,\n    {\n      type: 'e',\n      description: 'Otros',\n      \n    },\n    \n  ];\n\nconst columns = [\n  {\n    title: \"Etiqueta\",\n    dataIndex: \"type\",\n    key: \"type\",\n    render: (type) => {\n      let color = type === \"i\" ? \"green\" : \"red\";\n      let tag = type === \"i\" ? \"ingreso\" : \"egreso\";\n\n      return (\n        <Tag color={color} key={tag}>\n          {tag.toUpperCase()}\n        </Tag>\n      );\n    },\n  },\n  {\n    title: \"Descripcion\",\n    dataIndex: \"description\",\n    key: \"description\",\n  },\n\n  {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => (\n      <Space size=\"middle\">\n        <a>\n          <EditOutlined />\n        </a>\n        <a>\n          <DeleteOutlined />\n        </a>\n      </Space>\n    ),\n  },\n];\n\n\n  return (\n    <div>\n      <Table columns={columns} dataSource={dataSource} loading='TRUE' />\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"@ant-design/charts\";\n\nconst LineChart = () => {\n  /* const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  const url = \"https://piggy-srv.herokuapp.com/api/v1/transactions\";\n  const getTransactions = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setTransactions(data.data);\n  };\n  //console.log(\"chart>\" + transactions); */\n  const data = [\n    { fecha: \"1/12/2020\", gasto: 900 },\n    { fecha: \"4/12/2020\", gasto: 150 },\n    { fecha: \"8/12/2020\", gasto: 4000 },\n    { fecha: \"9/12/2020\", gasto: 250 },\n    { fecha: \"13/12/2020\", gasto: 30 },\n    { fecha: \"15/12/2020\", gasto: 900 },\n    { fecha: \"17/12/2020\", gasto: 105 },\n    { fecha: \"20/12/2020\", gasto: 46 },\n    { fecha: \"22/12/2020\", gasto: 25 },\n    { fecha: \"25/12/2020\", gasto: 344 },\n    { fecha: \"27/12/2020\", gasto: 93 },\n    { fecha: \"28/12/2020\", gasto: 165 },\n    { fecha: \"29/12/2020\", gasto: 450 },\n    { fecha: \"30/12/2020\", gasto: 25 },\n    { fecha: \"31/12/2020\", gasto: 3 },\n  ];\n\n  const config = {\n    data,\n    title: {\n      visible: true,\n      text: \"Gastos por dia\",\n    },\n    xField: \"fecha\",\n    yField: \"gasto\",\n    color: \"blue\",\n    point: {\n      visible: true,\n      size: 5,\n      shape: \"circle\",\n      style: {\n        fill: \"white\",\n        stroke: \"blurede\",\n        lineWidth: 2,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Line {...config} />\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React, { useState, useEffect } from 'react';\nimport { Bar } from '@ant-design/charts';\nconst BarChart = () => {\n  var data = [\n    {\n      month: 'Enero',\n      value: 38,\n    },\n    {\n      month: 'Febrero',\n      value: 52,\n    },\n    {\n      month: 'Marzo',\n      value: 61,\n    },\n    {\n      month: 'Abril',\n      value: 145,\n    },\n    {\n      month: 'Mayo',\n      value: 48,\n    },\n    {\n        month: 'Junio',\n        value: 38,\n      },\n      {\n        month: 'Julio',\n        value: 52,\n      },\n      {\n        month: 'Agosto',\n        value: 61,\n      },\n      {\n        month: 'Setiembre',\n        value: 145,\n      },\n      {\n        month: 'Octubre',\n        value: 48,\n      },\n      {\n        month: 'Noviembre',\n        value: 145,\n      },\n      {\n        month: 'Diciembre',\n        value: 48,\n      },\n  ];\n  var config = {\n    data: data,\n    xField: 'value',\n    yField: 'month',\n    seriesField: 'month',\n    legend: { position: 'top-left' },\n  };\n  return <Bar {...config} />;\n};\nexport default BarChart;","import React, { useState, useEffect } from 'react';\nimport { Pie } from '@ant-design/charts';\nconst Doughnut= () => {\n  var data = [\n    {\n      type: 'Supermercado',\n      value: 27,\n    },\n    {\n      type: 'Auto',\n      value: 25,\n    },\n    {\n      type: 'Gastos fjos',\n      value: 18,\n    },\n    {\n      type: 'Otros',\n      value: 15,\n    },\n    {\n      type: 'Tarjeta de credito',\n      value: 10,\n    },\n    {\n      type: 'Impuestos',\n      value: 5,\n    },\n  ];\n  var config = {\n    appendPadding: 10,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 1,\n    innerRadius: 0.64,\n   \n    label: {\n      type: 'inner',\n      offset: '-50%',\n      style: { textAlign: 'center' },\n      autoRotate: false,\n      content: '{value}',\n    },\n    interactions: [\n      { type: 'element-selected' },\n      { type: 'element-active' },\n      { type: 'pie-statistic-active' },\n    ],\n  };\n  return <Pie {...config} />;\n};\nexport default Doughnut;","import React from \"react\";\nimport { PageHeader } from \"antd\";\nimport LineChart from \"../charts/lineChart\";\nimport BarChart from '../charts/barChart';\nimport Doughnut from '../charts/doughnut';\nconst Reports = () => {\n  return (\n    <div>\n      <PageHeader title=\"Reportes de gastos e ingresos\"></PageHeader>\n      <Doughnut/>\n      <LineChart />\n      <BarChart />\n    </div>\n  );\n};\n\nexport default Reports;\n","import React from 'react'\nimport {\n    Form,\n    Input,\n    Button,\n    Radio,\n    Select,\n    Cascader,\n    DatePicker,\n    Switch,\n  } from 'antd';\nconst Config = () => {\n    return (\n        <div>\n         <Form>\n             <Form.Item label=\"Tema oscuro\">\n                <Switch/>\n             </Form.Item>\n             <Form.Item label=\"Decimales\">\n             <Switch/>\n             </Form.Item>\n             <Form.Item label=\"Formato fecha\">\n                 <Select>\n                     <Select.Option>DD:MM:YYYY</Select.Option>\n                     <Select.Option>DD:MM:YY</Select.Option>\n                     <Select.Option>YYYY:MM:DD</Select.Option>\n                 </Select>\n             </Form.Item>\n             <Form.Item>\n                 <Button type=\"primary\">Enviar</Button>\n             </Form.Item>\n        </Form>   \n        </div>\n    )\n}\n\nexport default Config\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Menu, Row, Col } from \"antd\";\nimport {\n  DashboardOutlined,\n  TagsOutlined,\n  SettingOutlined,\n  BarChartOutlined,\n  BellOutlined,\n  UserOutlined,\n  TableOutlined,\n} from \"@ant-design/icons\";\nimport \"./dashboard.css\";\nimport Management from \"../management/management\";\nimport MenuItem from \"antd/lib/menu/MenuItem\";\nimport Categories from \"../categories/categories\";\nimport Reports from \"../reports/reports\";\nimport Config from '../config/config'\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Row>\n            <Col span={24} style={{ textAlign: \"right\" }}>\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                style={{ textAlign: \"right\" }}\n              >\n                <MenuItem>\n                  <BellOutlined />\n                </MenuItem>\n                <MenuItem>\n                  <UserOutlined />\n                </MenuItem>\n              </Menu>\n            </Col>\n          </Row>\n        </Header>\n        <Layout>\n          <Sider width={200} className=\"site-layout-background\">\n            <Menu\n              theme=\"dark\"\n              mode=\"inline\"\n              defaultSelectedKeys={[\"1\"]}\n              defaultOpenKeys={[\"sub1\"]}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              <Menu.Item key=\"1\" icon={<TableOutlined />}>\n                <Link to=\"/dashboard\">Gestion</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<TagsOutlined />}>\n                <Link to=\"/dashboard/categories\">Categorias</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\" icon={<BarChartOutlined />}>\n                <Link to=\"/dashboard/reports\">Reportes</Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\" icon={<SettingOutlined />}>\n                <Link to=\"/dashboard/config\">Configuracion</Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                margin: 0,\n                minHeight: 280,\n              }}\n            >\n              <Switch>\n                <Route exact path=\"/dashboard\">\n                  <Management />\n                </Route>\n                <Route path=\"/dashboard/categories\">\n                  <Categories />\n                </Route>\n                <Route path=\"/dashboard/reports\">\n                  <Reports />\n                </Route>\n                <Route path=\"/dashboard/config\">\n                  <Config/>\n                </Route>\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/login/login\";\nimport Dashboard from \"./components/dashboard/dashboard\";\nconst App = () => (\n  <div className=\"App\">\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}